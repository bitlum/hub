syntax = "proto3";

package emulation;

// Emulator grpc service is used as an controling point for external emulation
// subsystem which generate the user activity, sets fee and sends it to our
// emulation network.
service Emulator {
    //
    // SendFee is used to emulate setting current fee the same for all users
    rpc SendFee (SendFeeRequest) returns (SendFeeResponse);

    //
    // SendPayment is used to emulate the activity of one user sending payment
    // to another within the local router network.
    rpc SendPayment (SendPaymentRequest) returns (SendPaymentResponse);

    //
    // OpenChannel is used to emulate that user has opened the channel with the
    // router.
    rpc OpenChannel (OpenChannelRequest) returns (OpenChannelResponse);

    //
    // CloseChannel is used to emulate that user has closed the channel with the
    // router.
    rpc CloseChannel (CloseChannelRequest) returns (CloseChannelResponse);
}

message SendFeeRequest {
    double fee = 1;
}

message SendFeeResponse {
}

message SendPaymentRequest {
    uint64 first_user = 1;
    uint64 second_user = 2;
    double amount = 3;
}

message SendPaymentResponse {
}

message OpenChannelRequest {
    uint64 user_id = 1;
    uint64 locked_by_user = 2;
    uint64 chan_id = 3;
}

message OpenChannelResponse {
}

message CloseChannelRequest {
    uint64 chan_id = 3;
}

message CloseChannelResponse {
}

