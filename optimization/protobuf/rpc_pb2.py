# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='rpc.proto',
  package='emulation',
  syntax='proto3',
  serialized_pb=_b('\n\trpc.proto\x12\temulation\"F\n\x12SendPaymentRequest\x12\x0e\n\x06sender\x18\x01 \x01(\x04\x12\x10\n\x08receiver\x18\x02 \x01(\x04\x12\x0e\n\x06\x61mount\x18\x04 \x01(\x04\"\x15\n\x13SendPaymentResponse\"N\n\x12OpenChannelRequest\x12\x0f\n\x07user_id\x18\x01 \x01(\x04\x12\x16\n\x0elocked_by_user\x18\x02 \x01(\x04\x12\x0f\n\x07\x63han_id\x18\x03 \x01(\x04\"\x15\n\x13OpenChannelResponse\"&\n\x13\x43loseChannelRequest\x12\x0f\n\x07\x63han_id\x18\x03 \x01(\x04\"\x16\n\x14\x43loseChannelResponse2\xf7\x01\n\x08\x45mulator\x12L\n\x0bSendPayment\x12\x1d.emulation.SendPaymentRequest\x1a\x1e.emulation.SendPaymentResponse\x12L\n\x0bOpenChannel\x12\x1d.emulation.OpenChannelRequest\x1a\x1e.emulation.OpenChannelResponse\x12O\n\x0c\x43loseChannel\x12\x1e.emulation.CloseChannelRequest\x1a\x1f.emulation.CloseChannelResponseb\x06proto3')
)




_SENDPAYMENTREQUEST = _descriptor.Descriptor(
  name='SendPaymentRequest',
  full_name='emulation.SendPaymentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sender', full_name='emulation.SendPaymentRequest.sender', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='receiver', full_name='emulation.SendPaymentRequest.receiver', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='amount', full_name='emulation.SendPaymentRequest.amount', index=2,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=94,
)


_SENDPAYMENTRESPONSE = _descriptor.Descriptor(
  name='SendPaymentResponse',
  full_name='emulation.SendPaymentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=96,
  serialized_end=117,
)


_OPENCHANNELREQUEST = _descriptor.Descriptor(
  name='OpenChannelRequest',
  full_name='emulation.OpenChannelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='emulation.OpenChannelRequest.user_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='locked_by_user', full_name='emulation.OpenChannelRequest.locked_by_user', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='chan_id', full_name='emulation.OpenChannelRequest.chan_id', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=119,
  serialized_end=197,
)


_OPENCHANNELRESPONSE = _descriptor.Descriptor(
  name='OpenChannelResponse',
  full_name='emulation.OpenChannelResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=199,
  serialized_end=220,
)


_CLOSECHANNELREQUEST = _descriptor.Descriptor(
  name='CloseChannelRequest',
  full_name='emulation.CloseChannelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chan_id', full_name='emulation.CloseChannelRequest.chan_id', index=0,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=222,
  serialized_end=260,
)


_CLOSECHANNELRESPONSE = _descriptor.Descriptor(
  name='CloseChannelResponse',
  full_name='emulation.CloseChannelResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=262,
  serialized_end=284,
)

DESCRIPTOR.message_types_by_name['SendPaymentRequest'] = _SENDPAYMENTREQUEST
DESCRIPTOR.message_types_by_name['SendPaymentResponse'] = _SENDPAYMENTRESPONSE
DESCRIPTOR.message_types_by_name['OpenChannelRequest'] = _OPENCHANNELREQUEST
DESCRIPTOR.message_types_by_name['OpenChannelResponse'] = _OPENCHANNELRESPONSE
DESCRIPTOR.message_types_by_name['CloseChannelRequest'] = _CLOSECHANNELREQUEST
DESCRIPTOR.message_types_by_name['CloseChannelResponse'] = _CLOSECHANNELRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SendPaymentRequest = _reflection.GeneratedProtocolMessageType('SendPaymentRequest', (_message.Message,), dict(
  DESCRIPTOR = _SENDPAYMENTREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:emulation.SendPaymentRequest)
  ))
_sym_db.RegisterMessage(SendPaymentRequest)

SendPaymentResponse = _reflection.GeneratedProtocolMessageType('SendPaymentResponse', (_message.Message,), dict(
  DESCRIPTOR = _SENDPAYMENTRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:emulation.SendPaymentResponse)
  ))
_sym_db.RegisterMessage(SendPaymentResponse)

OpenChannelRequest = _reflection.GeneratedProtocolMessageType('OpenChannelRequest', (_message.Message,), dict(
  DESCRIPTOR = _OPENCHANNELREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:emulation.OpenChannelRequest)
  ))
_sym_db.RegisterMessage(OpenChannelRequest)

OpenChannelResponse = _reflection.GeneratedProtocolMessageType('OpenChannelResponse', (_message.Message,), dict(
  DESCRIPTOR = _OPENCHANNELRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:emulation.OpenChannelResponse)
  ))
_sym_db.RegisterMessage(OpenChannelResponse)

CloseChannelRequest = _reflection.GeneratedProtocolMessageType('CloseChannelRequest', (_message.Message,), dict(
  DESCRIPTOR = _CLOSECHANNELREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:emulation.CloseChannelRequest)
  ))
_sym_db.RegisterMessage(CloseChannelRequest)

CloseChannelResponse = _reflection.GeneratedProtocolMessageType('CloseChannelResponse', (_message.Message,), dict(
  DESCRIPTOR = _CLOSECHANNELRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:emulation.CloseChannelResponse)
  ))
_sym_db.RegisterMessage(CloseChannelResponse)



_EMULATOR = _descriptor.ServiceDescriptor(
  name='Emulator',
  full_name='emulation.Emulator',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=287,
  serialized_end=534,
  methods=[
  _descriptor.MethodDescriptor(
    name='SendPayment',
    full_name='emulation.Emulator.SendPayment',
    index=0,
    containing_service=None,
    input_type=_SENDPAYMENTREQUEST,
    output_type=_SENDPAYMENTRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='OpenChannel',
    full_name='emulation.Emulator.OpenChannel',
    index=1,
    containing_service=None,
    input_type=_OPENCHANNELREQUEST,
    output_type=_OPENCHANNELRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CloseChannel',
    full_name='emulation.Emulator.CloseChannel',
    index=2,
    containing_service=None,
    input_type=_CLOSECHANNELREQUEST,
    output_type=_CLOSECHANNELRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_EMULATOR)

DESCRIPTOR.services_by_name['Emulator'] = _EMULATOR

# @@protoc_insertion_point(module_scope)
